apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.hujiang.android-aspectjx'
apply from: '../tinkerpatch.gradle'
apply from: '../reinforce/reinforce_release.gradle'

android {

    compileSdkVersion rootProject.ext.targetSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.suiyi.testdemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        manifestPlaceholders = [
                environment: "prd",
        ]

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        // tinker 开启配置
        buildConfigField "boolean", "TINKER_ENABLE", "${tinkerpatchSupport.tinkerEnable}"
        // bugly 开启配置
        buildConfigField "boolean", "BUGLY_ENABLE", "${BUGLY_ENABLE}"
        // bugly id
        buildConfigField "String", "BUGLY_ID", "\"${BUGLY_ID}\""
    }

    //签名
    signingConfigs {
        release {
            storeFile file("../keystore/testdemo.keystore")
            storePassword '332007906dc'
            keyAlias 'testdemo'
            keyPassword '332007906dc'
        }
    }

    dexOptions {
        jumboMode = true
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            multiDexEnabled = true
            versionNameSuffix = versionName
            applicationIdSuffix = moduleName
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", "app")
            arg("AROUTER_GENERATE_DOC", "enable")
        }
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /** 子框架集合 **/
    api project(':jetpack')
    implementation(name: 'flutter_debug-6.0', ext: 'aar')

    /** ARouter **/
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    /** tinker 相关 **/
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") {
        changing = true
    }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") {
        changing = true
    }

    /** 分包 **/
    implementation "com.android.support:multidex:1.0.3"

    /** bugly **/
    implementation 'com.tencent.bugly:crashreport:3.1.0'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
}
